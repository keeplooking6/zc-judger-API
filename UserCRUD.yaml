swagger: "2.0"
info:
  description: "ZC-OJ-Swagger"
  version: "1.0.0"
  title: "Swagger Petstore"
host: "127.0.0.1"
basePath: "/zc-oj-api"
schemes:
- "https"
- "http"
consumes:
  - application/x-www-from-urlencoded
  - mutipart/form-data
  - application/json
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "创建用户"
      description: "用户注册"
      operationId: "createUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
       -  in: body
          name: user
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: "OK"
        "400":
          description: "用户名已存在"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FindUserNameResponse"
        default:
          description: "INTERNAL SERVER ERROR"
    put:
      tags:
      - "user"
      summary: "更新用户"
      description: "修改用户信息"
      operationId: "updateUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "userId"
        in: "query"
        description: "用户唯一标识"
        required: true
        type: "integer"
      - name: "userName"
        in: "query"
        description: "用户名，不能使用已存在的"
        required: false
        type: "string"
      - name: "password"
        in: "query"
        description: "用户密码，加密传输，加密存储"
        required: false
        type: "string"
      - name: "email"
        in: "query"
        description: "用户邮箱，不能使用已经绑定过的"
        required: false
        type: "string"
      - name: "position"
        in: "query"
        description: "用户地理位置"
        required: false
        type: "string"
      - name: "college"
        in: "query"
        description: "用户所在大学"
        required: false
        type: "string"
      - name: "group"
        in: "query"
        description: "用户组织，班级"
        required: false
        type: "string"
      responses:
        "200":
          description: "OK"
        default:
          description: "更新失败"
    get:
      tags:
      - "user"
      summary: "查找用户"
      description: "查找用户"
      operationId: "getUserByName"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "userName"
        in: "query"
        description: "用户名"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "密码"
        required: true
        type: "string"
      responses:
        "200":
          description: "查找成功"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/LoginResponse"
        "400":
          description: "传参不合法"
        "401":
          description: "密码不正确"
        "404":
          description: "没有找到该用户"
    delete:
      tags:
      - "user"
      summary: "注销用户"
      description: "注销用户"
      operationId: "deleteUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "userId"
        in: "query"
        description: "要注销的用户id"
        required: true
        type: "integer"
      responses:
        "204":
          description: "注销成功"
        "400":
          description: "注销失败"
definitions:
  User:
    type: "object"
    properties:
      userId:
        type: "integer"
        format: "int64"
      userName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      position:
        type: "string"
      college:
        type: "string"
      group:
        type: "string"
      loginTime:
        type: "string"
      credit:
        type: "integer"
        format: "int32"
      role:
        type: "integer"
  Submit:
    type: "object"
    properties:
      submitId:
        type: "integer"
        format: "int64"
      problemId:
        type: "integer"
        format: "int64"
      submitTime:
        type: "string"
      submitCode:
        type: "string"
      userId:
        type: "integer"
        format: "int64"
      submitSpace:
        type: "string"
      submitRuntime:
        type: "integer"
        format: "int64"
      submitState:
        type: "string"
      submitLanguage:
        type: "string"
      submitLength:
        type: "integer"
        format: "int64"
      submitEffective:
        type: "string"
      submitGrade:
        type: "string"
  FindUserName: 
    type: "object"
    properties: 
      userName:
        type: "string"
  Role:
    type: "object"
    properties:
      roleId: 
        type: "integer"
  LoginResponse: 
    type: "object"
    properties:
      code:
        type: "integer"
      message: 
        type: "string"
      data:
        type: "object"
        $ref: "#/definitions/User"
  FindUserNameResponse:
    type: "object"
    properties:
      code:
        type: "integer"
      message:
        type: "string"
      data:
        type: "object"
        $ref: "#/definitions/FindUserName"

        
